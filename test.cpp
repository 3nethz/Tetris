#include <iostream>

const char mPieces[7][4][5][5] = {
    // Square
    {
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 2, 1, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 2, 1, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 2, 1, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 2, 1, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 0, 0}}},

    // I
    {
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 1, 2, 1, 1},
         {0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 2, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 1, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {1, 1, 2, 1, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 1, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 2, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0}}},
    // L
    {
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 2, 0, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 1, 2, 1, 0},
         {0, 1, 0, 0, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 1, 1, 0, 0},
         {0, 0, 2, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 1, 0},
         {0, 1, 2, 1, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0}}},
    // L mirrored
    {
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 2, 0, 0},
         {0, 1, 1, 0, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 1, 0, 0, 0},
         {0, 1, 2, 1, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 2, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 1, 2, 1, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 0, 0, 0}}},
    // N
    {
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 2, 1, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 1, 2, 0, 0},
         {0, 0, 1, 1, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 1, 2, 0, 0},
         {0, 1, 0, 0, 0},
         {0, 0, 0, 0, 0}},

        {{0, 0, 0, 0, 0},
         {0, 1, 1, 0, 0},
         {0, 0, 2, 1, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0}}},
    // N mirrored
    {
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 2, 1, 0},
         {0, 0, 0, 1, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 2, 1, 0},
         {0, 1, 1, 0, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 1, 0, 0, 0},
         {0, 1, 2, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 1, 0},
         {0, 1, 2, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0}}},
    // T
    {
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 2, 1, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0},
         {0, 1, 2, 1, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 1, 2, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 0, 0, 0, 0}},
        {{0, 0, 0, 0, 0},
         {0, 0, 1, 0, 0},
         {0, 1, 2, 1, 0},
         {0, 0, 0, 0, 0},
         {0, 0, 0, 0, 0}}}};

int mPiecesInitialPosition[7 /*kind */][4 /* r2otation */][2 /* position */] =
    {
        /* Square */
        {
            {-2, -3},
            {-2, -3},
            {-2, -3},
            {-2, -3}},
        /* I */
        {
            {-2, -2},
            {-2, -3},
            {-2, -2},
            {-2, -3}},
        /* L */
        {
            {-2, -3},
            {-2, -3},
            {-2, -3},
            {-2, -2}},
        /* L mirrored */
        {
            {-2, -3},
            {-2, -2},
            {-2, -3},
            {-2, -3}},
        /* N */
        {
            {-2, -3},
            {-2, -3},
            {-2, -3},
            {-2, -2}},
        /* N mirrored */
        {
            {-2, -3},
            {-2, -3},
            {-2, -3},
            {-2, -2}},
        /* T */
        {
            {-2, -3},
            {-2, -3},
            {-2, -3},
            {-2, -2}},
};

int getBlockType(int pPiece, int pRotation, int pX, int pY)
{
    return mPieces[pPiece][pRotation][pX][pY];
}

// returns the horizontal displacement
int getXInitialPosition(int pPiece, int pRotation)
{
    return mPiecesInitialPosition[pPiece][pRotation][0];
}
// returns the vertical displacement
int getYInitialPosition(int pPiece, int pRotation)
{
    return mPiecesInitialPosition[pPiece][pRotation][1];
}

int main()
{
    // for (int i = 0; i < 5; i++)
    // {
    //     for (int j = 0; j < 5; j++)
    //     {
    //         int x = getBlockType(2,3,3,3);
    //         std::cout << "Block [" << i << "][" << j << "] blockType: " << x << std::endl;
    //     }
    // }

    int x  = getBlockType(2,3,3,3);
    std::cout << "Block [" << 3 << "][" << 3 << "] blockType: " << x << std::endl;
}